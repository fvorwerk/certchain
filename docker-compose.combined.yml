version: '3.8'

services:
  # Discovery service running on the primary node
  discovery:
    build: ./discovery-service
    restart: always
    environment:
      - PORT=4000
    volumes:
      - discovery_data:/app/data
    networks:
      - certchain_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.discovery.rule=Host(`discovery.node1.mulm.eu`)"
      - "traefik.http.routers.discovery.entrypoints=websecure"
      - "traefik.http.routers.discovery.tls=true"
      - "traefik.http.routers.discovery.tls.certresolver=le"
      - "traefik.http.services.discovery.loadbalancer.server.port=4000"

  # Primary node (node1)
  node1:
    build: .
    restart: always
    environment:
      - NODE_ID=1
      - PORT=3000
      - NODE_ENV=production
      - PUBLIC_URL=https://node1.mulm.eu
      - DISCOVERY_SERVICE=https://discovery.node1.mulm.eu
      - AUTO_REGISTER=true
      - ADMIN_API_KEY=34468bdd19b8beb8e6885036eb76b5f8
      - BLOCK_INTERVAL=120
    volumes:
      - node1_data:/app/blocks
      - node1_config:/app/config
    networks:
      - certchain_network
    depends_on:
      - discovery
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node1.rule=Host(`node1.mulm.eu`)"
      - "traefik.http.routers.node1.entrypoints=websecure"
      - "traefik.http.routers.node1.tls=true"
      - "traefik.http.routers.node1.tls.certresolver=le"
      - "traefik.http.services.node1.loadbalancer.server.port=3000"

networks:
  certchain_network:
    external: true
    name: web

volumes:
  discovery_data:
  node1_data:
  node1_config:
